<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" class="sc-gvZAcH jeMpdI graph" data-testid="graph" role="img" aria-labelledby="polymath-graph-title" width="2190" height="1331"><title id="polymath-graph-title">Workflow Studio State Machine Graph</title><g transform="translate(12,12)" class="new-look-graph"><g class="nodes"><g class="node-container" transform="translate(1083,22)"><g><circle class="sc-ggpjZQ lnfDXG shape" r="22"/><text class="sc-eZkCL pFMl label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Start</tspan></text></g></g><g class="node-container" transform="translate(1083,103.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Ingestion Lambda" data-state-id="Ingestion Lambda" data-state-type="Task"><g class="new-look-state-node has-errors"><rect x="-121" y="-24.5" width="242" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-121,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-105,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-49,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Ingestion Lambda</tspan></text></g><g class="error-icon" transform="translate(85,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(1083,695.25)"><g class="sc-eBMEME bZyXrL node state container Parallel" data-testid="graph-Parallel" data-state-id="Parallel" data-state-type="Parallel"><g class="new-look-state-node "><g class="bounding-box" transform="translate(0,5)"><rect class="sc-kAkpmW edSmtE shape" rx="7" ry="7" x="-1083" y="-532.25" width="2166" height="1059.5"/><g class="content" transform="translate(-1083,-532.25)"><g class="branch" transform="translate(20,89)"><g class="branchInsertArea" data-insertion-index="0" data-parent-state-id="Parallel" id="Parallel:0" x="-20" y="0" width="20" height="950.5"><rect x="-20" y="0" width="20" height="950.5" stroke="none" fill="none"/><path d="M-10,0 l0,950.5" stroke="none" fill="none"/></g><g transform=""><g class="nodes"><g class="node-container" transform="translate(770,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-PutObject: Store Ingested Data" data-state-id="PutObject: Store Ingested Data" data-state-type="Task"><g class="new-look-state-node "><rect x="-139.5" y="-24.5" width="279" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-139.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-123.5,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-s3" aria-hidden="true"><title>S3</title></use></g><g class="text-lines" transform="translate(-67.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">S3: PutObjectAcl</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">PutObject: Store Ingested Data</tspan></text></g></g></g></g><g class="node-container" transform="translate(770,108.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Lambda Transform" data-state-id="Lambda Transform" data-state-type="Task"><g class="new-look-state-node has-errors"><rect x="-124" y="-24.5" width="248" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-124,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-108,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-52,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Lambda Transform</tspan></text></g><g class="error-icon" transform="translate(88,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(770,533.75)"><g class="sc-eBMEME bZyXrL node state container Parallel" data-testid="graph-Parallel (1)" data-state-id="Parallel (1)" data-state-type="Parallel"><g class="new-look-state-node "><g class="bounding-box" transform="translate(0,5)"><rect class="sc-kAkpmW edSmtE shape" rx="7" ry="7" x="-770" y="-365.75" width="1540" height="726.5"/><g class="content" transform="translate(-770,-365.75)"><g class="branch" transform="translate(20,89)"><g class="branchInsertArea" data-insertion-index="0" data-parent-state-id="Parallel (1)" id="Parallel (1):0" x="-20" y="0" width="20" height="617.5"><rect x="-20" y="0" width="20" height="617.5" stroke="none" fill="none"/><path d="M-10,0 l0,617.5" stroke="none" fill="none"/></g><g transform=""><g class="nodes"><g class="node-container" transform="translate(465,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-PutObject: Store Transform Data" data-state-id="PutObject: Store Transform Data" data-state-type="Task"><g class="new-look-state-node "><rect x="-144.5" y="-24.5" width="289" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-144.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-128.5,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-s3" aria-hidden="true"><title>S3</title></use></g><g class="text-lines" transform="translate(-72.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">S3: PutObject</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">PutObject: Store Transform Data</tspan></text></g></g></g></g><g class="node-container" transform="translate(465,108.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Lambda Loading to Data Warehouse" data-state-id="Lambda Loading to Data Warehouse" data-state-type="Task"><g class="new-look-state-node has-errors"><rect x="-179.5" y="-24.5" width="359" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-179.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-163.5,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-lam" aria-hidden="true"><title>Lambda</title></use></g><g class="text-lines" transform="translate(-107.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Lambda: Invoke</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Lambda Loading to Data Warehouse</tspan></text></g><g class="error-icon" transform="translate(143.5,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(465,367.25)"><g class="sc-eBMEME bZyXrL node state container Parallel" data-testid="graph-Parallel (2)" data-state-id="Parallel (2)" data-state-type="Parallel"><g class="new-look-state-node "><g class="bounding-box" transform="translate(0,5)"><rect class="sc-kAkpmW edSmtE shape" rx="7" ry="7" x="-465" y="-199.25" width="930" height="393.5"/><g class="content" transform="translate(-465,-199.25)"><g class="branch" transform="translate(20,89)"><g class="branchInsertArea" data-insertion-index="0" data-parent-state-id="Parallel (2)" id="Parallel (2):0" x="-20" y="0" width="20" height="284.5"><rect x="-20" y="0" width="20" height="284.5" stroke="none" fill="none"/><path d="M-10,0 l0,284.5" stroke="none" fill="none"/></g><g transform=""><g class="nodes"><g class="node-container" transform="translate(129.5,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-PutRecord" data-state-id="PutRecord" data-state-type="Task"><g class="new-look-state-node "><rect x="-129.5" y="-24.5" width="259" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-129.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-113.5,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-ki" aria-hidden="true"><title>Kinesis</title></use></g><g class="text-lines" transform="translate(-57.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Kinesis Data Firehose: PutRecord</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">PutRecord</tspan></text></g></g></g></g><g class="node-container" transform="translate(129.5,108.5)"><g class="sc-eBMEME bZyXrL node state Succeed" data-testid="graph-Success" data-state-id="Success" data-state-type="Succeed"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-succeed"/></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Succeed state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Success</tspan></text></g></g></g></g><g class="node-container" transform="translate(129.5,176)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-PutRecord:state-Success:normal" d="M129.5,49L129.5,51.916666666666664C129.5,54.833333333333336,129.5,60.666666666666664,129.5,66.5C129.5,72.33333333333333,129.5,78.16666666666667,129.5,81.08333333333333L129.5,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Success:end:normal" d="M129.5,133L129.5,135.91666666666666C129.5,138.83333333333334,129.5,144.66666666666666,129.5,150.5C129.5,156.33333333333334,129.5,162.16666666666666,129.5,165.08333333333334L129.5,168" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="1" data-parent-state-id="Parallel (2)" id="Parallel (2):1" x="259" y="0" width="20" height="284.5"><rect x="259" y="0" width="20" height="284.5" stroke="none" fill="none"/><path d="M269,0 l0,284.5" stroke="none" fill="none"/></g></g><g class="branch" transform="translate(299,89)"><g transform=""><g class="nodes"><g class="node-container" transform="translate(304.75,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Get Metric Data" data-state-id="Get Metric Data" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: GetMetricData</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Get Metric Data</tspan></text></g></g></g></g><g class="node-container" transform="translate(304.75,108.5)"><g class="sc-eBMEME bZyXrL node state Choice" data-testid="graph-Choice (2)" data-state-id="Choice (2)" data-state-type="Choice"><g class="new-look-state-node has-errors"><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-choice"/></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Choice state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Choice (2)</tspan></text></g><g class="error-icon" transform="translate(84,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(142,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Successful Notification Message" data-state-id="Successful Notification Message" data-state-type="Task"><g class="new-look-state-node "><rect x="-142" y="-24.5" width="284" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-142,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-126,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-70,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Successful Notification Message</tspan></text></g></g></g></g><g class="node-container" transform="translate(467.5,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Alarm If Lambda Invocation fails" data-state-id="Alarm If Lambda Invocation fails" data-state-type="Task"><g class="new-look-state-node "><rect x="-143.5" y="-24.5" width="287" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-143.5,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-127.5,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-71.5,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Alarm If Lambda Invocation fails</tspan></text></g></g></g></g><g class="node-container" transform="translate(304.75,276.5)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-Get Metric Data:state-Choice (2):normal" d="M304.75,49L304.75,51.916666666666664C304.75,54.833333333333336,304.75,60.666666666666664,304.75,66.5C304.75,72.33333333333333,304.75,78.16666666666667,304.75,81.08333333333333L304.75,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice (2):state-Successful Notification Message:choiceRule:0" d="M225.39925373134326,133L211.49937810945275,137.29166666666666C197.59950248756218,141.58333333333334,169.7997512437811,150.16666666666666,155.89987562189054,158.75C142,167.33333333333334,142,175.91666666666666,142,180.20833333333334L142,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice (2)-0" class="edge-label" transform="translate(155.89987562189054,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Rule #1</tspan><title>Rule #1</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice (2):state-Alarm If Lambda Invocation fails:choiceDefault" d="M384.10074626865674,133L398.0006218905473,137.29166666666666C411.9004975124378,141.58333333333334,439.70024875621885,150.16666666666666,453.60012437810946,158.75C467.5,167.33333333333334,467.5,175.91666666666666,467.5,180.20833333333334L467.5,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice (2)-Default" class="edge-label" transform="translate(453.60012437810946,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Default</tspan><title>Default</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Successful Notification Message:end:normal" d="M142,233.5L142,236.41666666666666C142,239.33333333333334,142,245.16666666666666,167.80773754052416,252.12694198023573C193.61547508104832,259.0872172938048,245.23095016209666,267.1744345876096,271.03868770262085,271.218043234512L296.846425243145,275.2616518814144" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Alarm If Lambda Invocation fails:end:normal" d="M467.5,233.5L467.5,236.41666666666666C467.5,239.33333333333334,467.5,245.16666666666666,441.69226245947584,252.12694198023573C415.8845249189517,259.0872172938048,364.26904983790337,267.1744345876096,338.46131229737915,271.218043234512L312.653574756855,275.2616518814144" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="2" data-parent-state-id="Parallel (2)" id="Parallel (2):2" x="611" y="0" width="20" height="284.5"><rect x="611" y="0" width="20" height="284.5" stroke="none" fill="none"/><path d="M621,0 l0,284.5" stroke="none" fill="none"/></g></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel (2)-PutRecord" class="path starting-connection" d="M465,44L465,47.75C465,51.5,465,59,412.4166666666667,62.75C359.8333333333333,66.5,254.66666666666666,66.5,202.08333333333334,70.25C149.5,74,149.5,81.5,149.5,85.25L149.5,89" fill="none"/></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel (2)-Get Metric Data" class="path starting-connection" d="M465,44L465,47.75C465,51.5,465,59,488.125,62.75C511.25,66.5,557.5,66.5,580.625,70.25C603.75,74,603.75,81.5,603.75,85.25L603.75,89" fill="none"/></g></g></g><g class="new-look-state-node "><rect x="-120" y="-199.25" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-199.25)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-198.75)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-parallel"/></g><g class="text-lines" transform="translate(-48,-199.25)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Parallel state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Parallel (2)</tspan></text></g></g></g></g></g><g class="node-container" transform="translate(465,609.5)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-PutObject: Store Transform Data:state-Lambda Loading to Data Warehouse:normal" d="M465,49L465,51.916666666666664C465,54.833333333333336,465,60.666666666666664,465,66.5C465,72.33333333333333,465,78.16666666666667,465,81.08333333333333L465,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Lambda Loading to Data Warehouse:state-Parallel (2):normal" d="M465,133L465,135.91666666666666C465,138.83333333333334,465,144.66666666666666,465,150.5C465,156.33333333333334,465,162.16666666666666,465,165.08333333333334L465,168" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Parallel (2):end:normal" d="M465,566.5L465,569.4166666666666C465,572.3333333333334,465,578.1666666666666,465,584C465,589.8333333333334,465,595.6666666666666,465,598.5833333333334L465,601.5" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="1" data-parent-state-id="Parallel (1)" id="Parallel (1):1" x="930" y="0" width="20" height="617.5"><rect x="930" y="0" width="20" height="617.5" stroke="none" fill="none"/><path d="M940,0 l0,617.5" stroke="none" fill="none"/></g></g><g class="branch" transform="translate(970,89)"><g transform=""><g class="nodes"><g class="node-container" transform="translate(282.5,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-GetMetricData" data-state-id="GetMetricData" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: GetMetricData</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">GetMetricData</tspan></text></g></g></g></g><g class="node-container" transform="translate(282.5,108.5)"><g class="sc-eBMEME bZyXrL node state Choice" data-testid="graph-Choice" data-state-id="Choice" data-state-type="Choice"><g class="new-look-state-node has-errors"><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-choice"/></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Choice state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Choice</tspan></text></g><g class="error-icon" transform="translate(84,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(135,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Describe: Success Notification" data-state-id="Describe: Success Notification" data-state-type="Task"><g class="new-look-state-node "><rect x="-135" y="-24.5" width="270" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-135,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-119,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-63,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Describe: Success Notification</tspan></text></g></g></g></g><g class="node-container" transform="translate(430,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Alarm: If Lambda Fails" data-state-id="Alarm: If Lambda Fails" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Alarm: If Lambda Fails</tspan></text></g></g></g></g><g class="node-container" transform="translate(282.5,276.5)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-GetMetricData:state-Choice:normal" d="M282.5,49L282.5,51.916666666666664C282.5,54.833333333333336,282.5,60.666666666666664,282.5,66.5C282.5,72.33333333333333,282.5,78.16666666666667,282.5,81.08333333333333L282.5,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice:state-Describe: Success Notification:choiceRule:0" d="M210.58457711442787,133L197.98714759535656,137.29166666666666C185.38971807628525,141.58333333333334,160.19485903814262,150.16666666666666,147.5974295190713,158.75C135,167.33333333333334,135,175.91666666666666,135,180.20833333333334L135,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice-0" class="edge-label" transform="translate(147.5974295190713,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Rule #1</tspan><title>Rule #1</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice:state-Alarm: If Lambda Fails:choiceDefault" d="M354.4154228855721,133L367.0128524046434,137.29166666666666C379.6102819237147,141.58333333333334,404.8051409618574,150.16666666666666,417.4025704809287,158.75C430,167.33333333333334,430,175.91666666666666,430,180.20833333333334L430,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice-Default" class="edge-label" transform="translate(417.4025704809287,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Default</tspan><title>Default</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Describe: Success Notification:end:normal" d="M135,233.5L135,236.41666666666666C135,239.33333333333334,135,245.16666666666666,158.26948950476643,252.10619423076753C181.53897900953282,259.04572179486837,228.07795801906568,267.0914435897368,251.34744752383207,271.11430448717095L274.6169370285985,275.13716538460517" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Alarm: If Lambda Fails:end:normal" d="M430,233.5L430,236.41666666666666C430,239.33333333333334,430,245.16666666666666,406.7305104952336,252.10619423076753C383.4610209904672,259.04572179486837,336.92204198093435,267.0914435897368,313.65255247616795,271.11430448717095L290.3830629714015,275.13716538460517" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="2" data-parent-state-id="Parallel (1)" id="Parallel (1):2" x="550" y="0" width="20" height="617.5"><rect x="550" y="0" width="20" height="617.5" stroke="none" fill="none"/><path d="M560,0 l0,617.5" stroke="none" fill="none"/></g></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel (1)-PutObject: Store Transform Data" class="path starting-connection" d="M770,44L770,47.75C770,51.5,770,59,722.5,62.75C675,66.5,580,66.5,532.5,70.25C485,74,485,81.5,485,85.25L485,89" fill="none"/></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel (1)-GetMetricData" class="path starting-connection" d="M770,44L770,47.75C770,51.5,770,59,850.4166666666666,62.75C930.8333333333334,66.5,1091.6666666666667,66.5,1172.0833333333333,70.25C1252.5,74,1252.5,81.5,1252.5,85.25L1252.5,89" fill="none"/></g></g></g><g class="new-look-state-node "><rect x="-120" y="-365.75" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-365.75)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-365.25)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-parallel"/></g><g class="text-lines" transform="translate(-48,-365.75)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Parallel state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Parallel (1)</tspan></text></g></g></g></g></g><g class="node-container" transform="translate(770,942.5)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-PutObject: Store Ingested Data:state-Lambda Transform:normal" d="M770,49L770,51.916666666666664C770,54.833333333333336,770,60.666666666666664,770,66.5C770,72.33333333333333,770,78.16666666666667,770,81.08333333333333L770,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Lambda Transform:state-Parallel (1):normal" d="M770,133L770,135.91666666666666C770,138.83333333333334,770,144.66666666666666,770,150.5C770,156.33333333333334,770,162.16666666666666,770,165.08333333333334L770,168" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Parallel (1):end:normal" d="M770,899.5L770,902.4166666666666C770,905.3333333333334,770,911.1666666666666,770,917C770,922.8333333333334,770,928.6666666666666,770,931.5833333333334L770,934.5" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="1" data-parent-state-id="Parallel" id="Parallel:1" x="1540" y="0" width="20" height="950.5"><rect x="1540" y="0" width="20" height="950.5" stroke="none" fill="none"/><path d="M1550,0 l0,950.5" stroke="none" fill="none"/></g></g><g class="branch" transform="translate(1580,89)"><g transform=""><g class="nodes"><g class="node-container" transform="translate(271.5,24.5)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Start Metric Streams" data-state-id="Start Metric Streams" data-state-type="Task"><g class="new-look-state-node "><rect x="-130" y="-24.5" width="260" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-130,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-114,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-58,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: StartMetricStreams</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Start Metric Streams</tspan></text></g></g></g></g><g class="node-container" transform="translate(271.5,108.5)"><g class="sc-eBMEME bZyXrL node state Choice" data-testid="graph-Choice (1)" data-state-id="Choice (1)" data-state-type="Choice"><g class="new-look-state-node has-errors"><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-choice"/></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Choice state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Choice (1)</tspan></text></g><g class="error-icon" transform="translate(84,-8)"><circle cx="8" cy="8" r="7"/><path d="M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172"/></g></g></g></g><g class="node-container" transform="translate(120,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Success Notification" data-state-id="Success Notification" data-state-type="Task"><g class="new-look-state-node "><rect x="-120" y="-24.5" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-48,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Success Notification</tspan></text></g></g></g></g><g class="node-container" transform="translate(423,209)"><g class="sc-eBMEME bZyXrL node state Task" data-testid="graph-Alarm - If Lambda Execution fail" data-state-id="Alarm - If Lambda Execution fail" data-state-type="Task"><g class="new-look-state-node "><rect x="-143" y="-24.5" width="286" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-143,-24.5)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-127,-24)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-service-cw" aria-hidden="true"><title>CloudWatch</title></use></g><g class="text-lines" transform="translate(-71,-24.5)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">CloudWatch: DescribeAlarms</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Alarm - If Lambda Execution fail</tspan></text></g></g></g></g><g class="node-container" transform="translate(271.5,276.5)"><g><circle class="sc-cmaqmh ejsMrA shape" r="8"/></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-Start Metric Streams:state-Choice (1):normal" d="M271.5,49L271.5,51.916666666666664C271.5,54.833333333333336,271.5,60.666666666666664,271.5,66.5C271.5,72.33333333333333,271.5,78.16666666666667,271.5,81.08333333333333L271.5,84" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice (1):state-Success Notification:choiceRule:0" d="M197.63432835820896,133L184.6952736318408,137.29166666666666C171.75621890547265,141.58333333333334,145.8781094527363,150.16666666666666,132.93905472636814,158.75C120,167.33333333333334,120,175.91666666666666,120,180.20833333333334L120,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice (1)-0" class="edge-label" transform="translate(132.93905472636814,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Rule #1</tspan><title>Rule #1</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Choice (1):state-Alarm - If Lambda Execution fail:choiceDefault" d="M345.36567164179104,133L358.3047263681592,137.29166666666666C371.2437810945274,141.58333333333334,397.1218905472637,150.16666666666666,410.06094527363183,158.75C423,167.33333333333334,423,175.91666666666666,423,180.20833333333334L423,184.5" marker-end="url(#arrowhead)" fill="none"/><g data-testid="graph-Choice (1)-Default" class="edge-label" transform="translate(410.06094527363183,158.75)"><rect x="-22" y="-8.25" width="44" height="16.5" class="sc-fhzFiK iSOgZk"/><text class="sc-jxOSlx grNWQL label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Default</tspan><title>Default</title></text></g></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Success Notification:end:normal" d="M120,233.5L120,236.41666666666666C120,239.33333333333334,120,245.16666666666666,143.93516163911178,252.11202390625314C167.87032327822357,259.0573811458396,215.74064655644713,267.11476229167926,239.67580819555891,271.14345286459906L263.6109698346707,275.17214343751886" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Alarm - If Lambda Execution fail:end:normal" d="M423,233.5L423,236.41666666666666C423,239.33333333333334,423,245.16666666666666,399.0648383608882,252.11202390625314C375.12967672177643,259.0573811458396,327.25935344355287,267.11476229167926,303.3241918044411,271.14345286459906L279.3890301653293,275.17214343751886" marker-end="url(#arrowhead)" fill="none"/></g></g></g><g class="branchInsertArea" data-insertion-index="2" data-parent-state-id="Parallel" id="Parallel:2" x="566" y="0" width="20" height="950.5"><rect x="566" y="0" width="20" height="950.5" stroke="none" fill="none"/><path d="M576,0 l0,950.5" stroke="none" fill="none"/></g></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel-PutObject: Store Ingested Data" class="path starting-connection" d="M1083,44L1083,47.75C1083,51.5,1083,59,1034.1666666666667,62.75C985.3333333333334,66.5,887.6666666666666,66.5,838.8333333333334,70.25C790,74,790,81.5,790,85.25L790,89" fill="none"/></g><g class="sc-dCFHLb jCgbgS"><path id="Parallel-Start Metric Streams" class="path starting-connection" d="M1083,44L1083,47.75C1083,51.5,1083,59,1211.0833333333333,62.75C1339.1666666666667,66.5,1595.3333333333333,66.5,1723.4166666666667,70.25C1851.5,74,1851.5,81.5,1851.5,85.25L1851.5,89" fill="none"/></g></g></g><g class="new-look-state-node "><rect x="-120" y="-532.25" width="240" height="49" rx="3" ry="3"/><g class="handle" transform="translate(-120,-532.25)"><path d="M5,16 L5,34 M8,16 L8,34"/></g><g class="icon" transform="translate(-104,-531.75)"><rect fill="var(--color-background-container-header-7s2tba, #fafafa)" x="0.0361026108" y="0.0181291967" width="48" height="48"/><line x1="47.5" y1="0.49122807" x2="47.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><line x1="0.5" y1="0.49122807" x2="0.5" y2="47.5" stroke="var(--color-board-placeholder-active-yji408, #d5dbdb)" stroke-linecap="square"/><use href="#icon-flow-parallel"/></g><g class="text-lines" transform="translate(-48,-532.25)"><text transform="translate(0,17)" class="line1"><tspan xml:space="preserve" text-anchor="start">Parallel state</tspan></text><text transform="translate(0,35.5)" class="line2 label"><tspan xml:space="preserve" text-anchor="start">Parallel</tspan></text></g></g></g></g></g><g class="node-container" transform="translate(1083,1284.5)"><g><circle class="sc-ggpjZQ lnfDXG shape" r="22"/><text class="sc-eZkCL pFMl label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">End</tspan></text></g></g></g><g class="edges"><g class="sc-dCFHLb jCgbgS edge"><path id="state-Ingestion Lambda:state-Parallel:normal" d="M1083,128L1083,130.91666666666666C1083,133.83333333333334,1083,139.66666666666666,1083,145.5C1083,151.33333333333334,1083,157.16666666666666,1083,160.08333333333334L1083,163" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="start:state-Ingestion Lambda" d="M1083,44L1083,46.916666666666664C1083,49.833333333333336,1083,55.666666666666664,1083,61.5C1083,67.33333333333333,1083,73.16666666666667,1083,76.08333333333333L1083,79" marker-end="url(#arrowhead)" fill="none"/></g><g class="sc-dCFHLb jCgbgS edge"><path id="state-Parallel:end:normal" d="M1083,1227.5L1083,1230.4166666666667C1083,1233.3333333333333,1083,1239.1666666666667,1083,1245C1083,1250.8333333333333,1083,1256.6666666666667,1083,1259.5833333333333L1083,1262.5" marker-end="url(#arrowhead)" fill="none"/></g></g><defs><marker id="arrowhead" markerWidth="8" markerHeight="6" refX="7" refY="3" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 8 3, 0 6"/></marker><marker id="highlighted-arrowhead" markerWidth="6" markerHeight="4" refX="5" refY="2" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 6 2, 0 4"/></marker><marker id="error-arrowhead" markerWidth="6" markerHeight="4" refX="5" refY="2" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 6 2, 0 4"/></marker><marker id="large-arrowhead" markerWidth="10" markerHeight="8" refX="9" refY="4" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 10 4, 0 8"/></marker><marker id="large-highlighted-arrowhead" markerWidth="5.5" markerHeight="4" refX="4.5" refY="2" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 5.5 2, 0 4"/></marker><marker id="large-error-arrowhead" markerWidth="10" markerHeight="8" refX="9" refY="4" orient="auto" class="sc-dZoequ gKcbgk"><polygon points="0 0, 10 4, 0 8"/></marker><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-orange"><stop stop-color="#C8511B" offset="0%"/><stop stop-color="#FF9900" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-turquoise"><stop stop-color="#055F4E" offset="0%"/><stop stop-color="#56C0A7" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-blue"><stop stop-color="#2E27AD" offset="0%"/><stop stop-color="#527FFF" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-pink"><stop stop-color="#B0084D" offset="0%"/><stop stop-color="#FF4F8B" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-red"><stop stop-color="#BD0816" offset="0%"/><stop stop-color="#FF5252" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-green"><stop stop-color="#1B660F" offset="0%"/><stop stop-color="#6CAE3E" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-purple"><stop stop-color="#4D27A8" offset="0%"/><stop stop-color="#A166FF" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-grey"><stop stop-color="#DCDCDC" offset="0%"/><stop stop-color="#F6F5F7" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-light-pink"><stop stop-color="#DD344C" offset="0%"/><stop stop-color="#DD344C" offset="100%"/></linearGradient>,<linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-ag"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-athena"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-emr"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-glue"><stop stop-color="#5930B5" offset="0%"/><stop stop-color="#945DF2" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-sns"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-states"><stop stop-color="#BC1356" offset="0%"/><stop stop-color="#F34482" offset="100%"/></linearGradient><linearGradient x1="0%" y1="100%" x2="100%" y2="0%" id="gradient-generic"><stop stop-color="#ccc" offset="0%"/><stop stop-color="#ddd" offset="100%"/></linearGradient><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-flow-choice"><g transform="translate(9.252020, 8.729185)" fill="#0073BB" fill-rule="nonzero"><path d="M13.7176503,0.219669914 C13.9839168,-0.0465966484 14.4005805,-0.0708026996 14.694192,0.147051761 L14.7783104,0.219669914 L26.7991257,12.2404852 C27.0653923,12.5067518 27.0895983,12.9234154 26.8717439,13.2170269 L26.7991257,13.3011454 L19.848,20.251 L27.063,27.58 L27.0635443,24.4725437 C27.0635443,24.0583302 27.3993308,23.7225437 27.8135443,23.7225437 C28.1901021,23.7225437 28.5018441,24.0000532 28.5554124,24.3617142 L28.5635443,24.4725437 L28.5635443,29.4222912 C28.5635443,29.4735748 28.5583971,29.5236562 28.5485912,29.5720469 L28.5290567,29.6477745 L28.4912259,29.7440224 L28.4674556,29.7898473 L28.4399848,29.8348433 L28.3922808,29.8993609 L28.3266417,29.9693147 L28.2903734,30.0012261 L28.2103598,30.0588356 L28.1372883,30.0990133 L28.0408973,30.1372113 L27.9243738,30.1641593 C27.8841362,30.1698129 27.8491297,30.1722912 27.8135443,30.1722912 L22.8637969,30.1722912 C22.4495833,30.1722912 22.1137969,29.8365048 22.1137969,29.4222912 C22.1137969,29.0457334 22.3913063,28.7339914 22.7529674,28.6804231 L22.8637969,28.6722912 L26.032,28.672 L18.787,21.312 L14.7783104,25.3219606 C14.5120439,25.5882272 14.0953802,25.6124333 13.8017687,25.3945788 L13.7176503,25.3219606 L9.63,21.234 L2.386,28.671 L5.69974747,28.6722912 L5.81057697,28.6804231 C6.17223802,28.7339914 6.44974747,29.0457334 6.44974747,29.4222912 C6.44974747,29.801987 6.16759359,30.1157822 5.80151803,30.1654446 L5.69974747,30.1722912 L0.75,30.1722912 L0.645175107,30.1650238 L0.571316134,30.150876 L0.491748953,30.1266437 L0.399838514,30.0857012 L0.323957521,30.0396165 L0.243169757,29.975129 L0.170912131,29.8989347 L0.109961584,29.8134582 L0.0656949991,29.7297074 L0.0297396696,29.6320944 L0.0076057584,29.5294944 L6.67910172e-13,29.4222912 L6.67910172e-13,24.4725437 L0.00813192572,24.3617142 C0.0617002376,24.0000532 0.373442216,23.7225437 0.75,23.7225437 C1.12969577,23.7225437 1.44349096,24.0046976 1.49315338,24.3707732 L1.5,24.4725437 L1.499,27.433 L8.569,20.174 L1.69683498,13.3011454 C1.43056842,13.0348788 1.40636237,12.6182151 1.62421683,12.3246036 L1.69683498,12.2404852 L13.7176503,0.219669914 Z M14.3527697,23.728356 L25.2081355,12.7708153 L14.2479803,1.81066017 L3.28782524,12.7708153 L9.616,19.099 L14.3527697,23.728356 Z" fill="false"/><path d="M15.2319803,14.0468153 L15.2319803,13.2668153 C16.0033137,12.8508153 16.5579803,12.4218153 16.8959803,11.9798153 C17.2339803,11.5378153 17.4029803,11.0178153 17.4029803,10.4198153 C17.4029803,9.65714861 17.151647,9.06131528 16.6489803,8.63231528 C16.1463137,8.20331528 15.448647,7.98881528 14.5559803,7.98881528 C13.6979803,7.98881528 12.874647,8.19248195 12.0859803,8.59981528 L12.0859803,8.59981528 L12.0859803,10.3288153 C12.8313137,9.98214861 13.4943137,9.80881528 14.0749803,9.80881528 C14.395647,9.80881528 14.6404803,9.87814861 14.8094803,10.0168153 C14.9784803,10.1554819 15.0629803,10.3591486 15.0629803,10.6278153 C15.0629803,10.9138153 14.9763137,11.1651486 14.8029803,11.3818153 C14.629647,11.5984819 14.343647,11.8151486 13.9449803,12.0318153 L13.9449803,12.0318153 L13.1909803,12.4348153 L13.3339803,14.0468153 L15.2319803,14.0468153 Z M14.3089803,17.4398153 C14.7249803,17.4398153 15.0608137,17.3141486 15.3164803,17.0628153 C15.572147,16.8114819 15.6999803,16.4821486 15.6999803,16.0748153 C15.6999803,15.6674819 15.572147,15.3381486 15.3164803,15.0868153 C15.0608137,14.8354819 14.7249803,14.7098153 14.3089803,14.7098153 C13.8929803,14.7098153 13.557147,14.8354819 13.3014803,15.0868153 C13.0458137,15.3381486 12.9179803,15.6674819 12.9179803,16.0748153 C12.9179803,16.4821486 13.0458137,16.8114819 13.3014803,17.0628153 C13.557147,17.3141486 13.8929803,17.4398153 14.3089803,17.4398153 Z" fill="false"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-flow-parallel"><g transform="translate(7.794758, 8.750000)" fill="#0073BB" fill-rule="nonzero"><path d="M16.199562,30.9615157 L16.1088907,30.9567289 L16.0428411,30.9462621 L15.9289205,30.9134016 L15.8581395,30.8824655 L15.747534,30.8144639 L15.6634156,30.7418457 L12.1634156,27.2418457 C11.8705224,26.9489525 11.8705224,26.4740788 12.1634156,26.1811856 C12.4296821,25.914919 12.8463458,25.890713 13.1399573,26.1085674 L13.2240758,26.1811856 L15.455,28.412 L15.455,12.999 L4.95524179,12.999 L4.955,28.446 L7.21966991,26.1811856 L7.30378835,26.1085674 C7.59739984,25.890713 8.01406352,25.914919 8.28033009,26.1811856 C8.54659665,26.4474521 8.5708027,26.8641158 8.35294824,27.1577273 L8.28033009,27.2418457 L4.78033009,30.7418457 L4.69621165,30.8144639 L4.689,30.818 C4.66089447,30.8406686 4.6237969,30.8633711 4.58539483,30.8825712 L4.50825575,30.9158403 L4.44163507,30.9367462 L4.36774058,30.9522701 L4.27779844,30.9610057 L4.22212648,30.9610007 L4.09909543,30.9462621 L3.99176083,30.9158467 L3.9143938,30.8824655 L3.82554184,30.8300094 L3.80378835,30.8144639 L3.71966991,30.7418457 L0.219669914,27.2418457 C-0.0732233047,26.9489525 -0.0732233047,26.4740788 0.219669914,26.1811856 C0.485936477,25.914919 0.902600159,25.890713 1.19621165,26.1085674 L1.28033009,26.1811856 L3.455,28.356 L3.45524179,12.25 C3.45524179,11.8703042 3.73739568,11.556509 4.10347124,11.5068466 L4.20524179,11.5 L15.455,11.502 L15.4552418,-1.42108547e-13 L16.9552418,-1.42108547e-13 L16.955,11.495 L28.1555171,11.5 C28.5351143,11.5001394 28.8487603,11.7822674 28.8983985,12.1482549 L28.9052418,12.25 L28.905,28.44 L31.1641955,26.1811856 L31.2483139,26.1085674 C31.5419254,25.890713 31.9585891,25.914919 32.2248557,26.1811856 C32.4911222,26.4474521 32.5153283,26.8641158 32.2974738,27.1577273 L32.2248557,27.2418457 L28.7248557,30.7418457 C28.6845386,30.7821628 28.6407734,30.8169302 28.5945094,30.8461478 L28.5328469,30.8811 L28.4268027,30.9248089 L28.3112733,30.9524264 L28.1887092,30.9615157 L28.1087231,30.9566189 L28.0352714,30.9445058 L27.9277401,30.9126603 L27.8920604,30.8980433 L27.8568141,30.8814079 C27.8351606,30.8704626 27.8145136,30.8587698 27.7943421,30.8460217 C27.7482777,30.8169302 27.7045126,30.7821628 27.6641955,30.7418457 L24.1641955,27.2418457 C23.8713023,26.9489525 23.8713023,26.4740788 24.1641955,26.1811856 C24.4304621,25.914919 24.8471258,25.890713 25.1407372,26.1085674 L25.2248557,26.1811856 L27.405,28.362 L27.4052418,12.999 L16.955,12.992 L16.955,28.389 L19.1634156,26.1811856 L19.247534,26.1085674 C19.5411455,25.890713 19.9578092,25.914919 20.2240758,26.1811856 C20.4903423,26.4474521 20.5145484,26.8641158 20.2966939,27.1577273 L20.2240758,27.2418457 L16.7240758,30.7418457 L16.6399573,30.8144639 L16.636,30.816 L16.589136,30.8490255 L16.5330413,30.8806066 L16.4260228,30.9248089 L16.3532729,30.9444467 L16.2795333,30.9566255 L16.199562,30.9615157 Z" fill="false"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-flow-succeed"><g transform="translate(11.250000, 12.250000)" fill="#2AB512" fill-rule="nonzero"><path d="M12.75,0 C5.70836944,0 0,5.70836944 0,12.75 C0,19.7916306 5.70836944,25.5 12.75,25.5 C19.7916306,25.5 25.5,19.7916306 25.5,12.75 C25.5,5.70836944 19.7916306,0 12.75,0 Z M12.75,1.5 C18.9632034,1.5 24,6.53679656 24,12.75 C24,18.9632034 18.9632034,24 12.75,24 C6.53679656,24 1.5,18.9632034 1.5,12.75 C1.5,6.53679656 6.53679656,1.5 12.75,1.5 Z"/><path d="M17.482151,9.3912361 C17.7750442,9.09834288 18.2499179,9.09834288 18.5428111,9.3912361 C18.8090777,9.65750266 18.8332838,10.0741663 18.6154293,10.3677778 L18.5428111,10.4518963 L11.1581958,17.8365117 C10.9013427,18.0933647 10.5030038,18.1258243 10.2104294,17.9293959 L10.1171609,17.8554362 L6.98253225,14.9408143 C6.67918728,14.6587599 6.66192789,14.1841999 6.94398232,13.8808549 C7.20039544,13.6050868 7.61590405,13.565753 7.91723953,13.7727921 L8.0039417,13.842305 L10.608,16.264 L17.482151,9.3912361 Z"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-service-lam"><polygon fill="url(#gradient-orange)" fill-rule="nonzero" points="0 0 48 0 48 48 0 48"/><g transform="translate(11, 10)" fill="#FFFFFF"><path d="M26.5889213,27.8937088 L19.6925948,27.8937088 C19.4772752,27.8931074 19.2813916,27.7706914 19.1888047,27.578869 L9.43766764,7.45673404 L5.31218659,7.45673404 C5.00303594,7.45673404 4.75241983,7.20943823 4.75241983,6.90438337 L4.75241983,0.828526005 C4.75241983,0.523471153 5.00303594,0.276175335 5.31218659,0.276175335 L13.9325948,0.276175335 C14.1479143,0.276776788 14.3437979,0.399192787 14.4363848,0.591015217 L24.1427405,20.7131501 L26.5889213,20.7131501 C26.8980719,20.7131501 27.148688,20.9604459 27.148688,21.2655008 L27.148688,27.3413582 C27.148688,27.646413 26.8980719,27.8937088 26.5889213,27.8937088 Z M20.0452478,26.7890075 L26.0291545,26.7890075 L26.0291545,21.8178515 L23.7900875,21.8178515 C23.5747679,21.81725 23.3788843,21.694834 23.2862974,21.5030116 L13.5799417,1.38087667 L5.87755102,1.38087667 L5.87755102,6.3520327 L9.79591837,6.3520327 C10.0112379,6.35263416 10.2071215,6.47505016 10.2997085,6.66687259 L20.0452478,26.7890075 Z"/><path d="M8.10542274,27.8937099 L0.82845481,27.8937099 C0.635054571,27.8940907 0.455155006,27.7959347 0.352653061,27.634104 C0.243858391,27.4681848 0.233185428,27.2575536 0.324664723,27.0817533 L7.93749271,11.3894708 C8.03007964,11.1976484 8.22596323,11.0752324 8.4412828,11.0746298 L8.4412828,11.0746298 C8.65533487,11.0742082 8.85089022,11.1942751 8.94507289,11.3839473 L12.5891545,18.7799228 C12.6634688,18.931712 12.6634688,19.1086786 12.5891545,19.2604679 L8.6148105,27.5457279 C8.53147526,27.7523199 8.33072312,27.8894609 8.10542274,27.8937099 L8.10542274,27.8937099 Z M1.72408163,26.7890075 L7.75276968,26.7890075 L11.4640233,19.0560981 L8.44688047,12.8973881 L1.72408163,26.7890075 Z"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-service-ki"><polygon fill="url(#gradient-purple)" fill-rule="nonzero" points="0 0 48 0 48 48 0 48"/><g transform="translate(8 8) scale(0.033229491173416406)"><path d="M106.9 892.9L144.1 892.9C144.1 743.1 241.4 590 963 590L963 552.8C208.6 552.8 106.9 724.7 106.9 892.9M213.8 1000L251 1000C251 865.2 251 661.5 963 661.5L963 624.2C271.7 624.2 213.8 809.8 213.8 1000M37.2 250L0 250C0 381.7 177.3 465.2 527.2 500 177.3 534.8 0 618.3 0 750L37.2 750C37.2 663.6 157.5 518.6 963 518.6L963 481.3C157.5 481.3 37.2 336.4 37.2 250M144.1 107.1L106.9 107.1C106.9 275.3 208.6 447.2 963 447.2L963 409.9C241.4 409.9 144.1 256.8 144.1 107.1M963 338.5L963 375.8C271.7 375.8 213.8 190.1 213.8 0L251 0C251 134.8 251 338.5 963 338.5" fill="#FFFFFF"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-service-s3"><polygon fill="url(#gradient-green)" fill-rule="nonzero" points="0 0 48 0 48 48 0 48"/><g transform="translate(8 8) scale(0.033229491173416406)"><path d="M854.6 580.4L862 532.2C925.1 569.8 926.3 585.7 926.2 586.3 926 586.4 914.7 595.2 854.6 580.4L854.6 580.4ZM477.4 442.1C477.4 462.4 460.9 479 440.6 479 420.4 479 403.9 462.4 403.9 442.1 403.9 421.8 420.4 405.3 440.6 405.3 460.9 405.3 477.4 421.8 477.4 442.1L477.4 442.1ZM768.8 898.8C768.8 903.4 750.5 910.3 734.4 916.5L717.9 922.8C700.3 929.8 679.5 936.1 656.1 941.5 597.7 955 517.2 963.2 440.6 963.2 236.8 963.2 128.2 925.8 128.1 896.5L46.5 243.4C116.8 297.2 261.3 331.6 440.6 331.6 612.1 331.6 787.5 298.4 869.7 240L819.1 570.4C712.7 538 582.3 475.6 517.9 444.6L514 442.7C514 442.5 514.1 442.3 514.1 442.1 514.1 401.5 481.1 368.4 440.6 368.4 400.1 368.4 367.2 401.5 367.2 442.1 367.2 482.8 400.1 515.8 440.6 515.8 467.8 515.8 491.2 500.8 504 478.7 570.9 510.9 704.4 574.7 813.5 607.2L768.8 898.8ZM440.6 36.8C687.9 36.8 879.8 105.7 881.2 165.2L880.3 170.7C870.3 229.1 682.1 294.8 440.6 294.8 204.1 294.8 44 230.9 37.3 169.7L36.8 165.3C37.6 103.2 199.6 36.8 440.6 36.8L440.6 36.8ZM868 493.1L917.8 168.6C917.8 167.7 918 166.8 918 165.8 918 62 675.3 0 440.6 0 185.3 0 0 69.7 0 165.8 0 166.6 0.1 167.3 0.1 168.1L91.5 898.8C91.5 995.1 382.3 1000 440.6 1000 519.8 1000 603.4 991.6 664.3 977.4 689.5 971.6 712.1 964.8 731.4 957.1L747.4 950.9C778.6 939 805.5 928.8 805.3 901.6L849 617C873.3 622.9 893.3 625.9 909.3 625.9 930.8 625.9 945.4 620.6 954.2 610.1 961.6 601.2 964.4 590.6 962.3 579.3 957.6 554 928.1 527.2 868 493.1L868 493.1Z" fill="#FFFFFF"/></g></g><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" id="icon-service-cw"><polygon fill="url(#gradient-pink)" fill-rule="nonzero" points="0 0 48 0 48 48 0 48"/><g transform="translate(8 8) scale(0.032)"><path d="M745.9 625C745.9 559.3 691.4 505.9 624.4 505.9 557.4 505.9 502.9 559.3 502.9 625 502.9 690.6 557.4 744 624.4 744 691.4 744 745.9 690.6 745.9 625L745.9 625ZM780.6 625C780.6 709.4 710.5 778 624.4 778 538.3 778 468.2 709.4 468.2 625 468.2 540.6 538.3 471.9 624.4 471.9 710.5 471.9 780.6 540.6 780.6 625L780.6 625ZM928 851.8L811.2 748.7C801.2 763.1 789.5 776.1 776.4 787.8L892.6 890.4C903.5 900 920.2 899.1 930 888.5 939.7 877.9 938.8 861.4 928 851.8L928 851.8ZM624.4 812C729.6 812 815.3 728.1 815.3 625 815.3 521.8 729.6 437.9 624.4 437.9 519.2 437.9 433.5 521.8 433.5 625 433.5 728.1 519.2 812 624.4 812L624.4 812ZM951.2 826.6C976.2 848.7 978.2 886.7 955.8 911.2 943.6 924.4 927 931 910.2 931 895.6 931 881 926 869.3 915.7L748.8 809.2C713.1 832.4 670.4 846 624.4 846 500 846 398.8 746.9 398.8 625 398.8 503.1 500 403.9 624.4 403.9 748.8 403.9 850 503.1 850 625 850 658.3 842.2 689.9 828.6 718.3L951.2 826.6ZM158.4 642L329.4 642 329.4 676 158.1 676C138.9 675.8 118.3 668.9 96.5 655.5 60.6 633.6 0 582.1 0 484 0 365.3 83.1 321.7 131.5 306.4 131.1 300.8 130.9 295.1 130.9 289.4 130.9 192.7 197.8 92.4 286.6 56.1 390.5 13.5 500.5 34.7 580.8 112.6 605.9 137 626.5 166.6 642.3 201 663.5 183.5 689.7 173.9 717.4 173.9 771.2 173.9 831.9 214 842.4 301.9 892.7 313.1 1000 352.8 1000 485.4 1000 542.3 980.5 588.5 941.8 622.3L918.7 597C949.6 569.8 965.3 532.3 965.3 485.4 965.3 368.7 865.7 339.8 822.9 332.7 818.3 332 814.2 329.4 811.5 325.6 808.8 321.8 807.8 317.1 808.7 312.6 803.7 241 759.2 207.9 717.4 207.9 691.3 207.9 666.8 220.3 650.3 242 646.5 247.1 640.1 249.5 633.8 248.7 627.5 247.8 622.2 243.5 620.1 237.6 605.1 197.2 583.7 163.3 556.4 136.8 486.3 68.8 390.5 50.3 299.9 87.5 224.6 118.3 165.6 207 165.6 289.4 165.6 298.7 166.2 307.9 167.3 316.8 167.9 321.6 166.4 326.5 163.1 330.1 160.4 333.1 156.9 335 153 335.7 108.3 346.9 34.7 381.2 34.7 484 34.7 561.5 78.4 604.4 114.9 626.6 131.3 636.7 145.8 641.8 158.4 642L158.4 642Z" fill="#FFFFFF"/></g></g></defs></g><style data-styled="true" data-styled-version="5.3.11">.bZyXrL{cursor:pointer;}/*!sc*/
data-styled.g42[id="sc-eBMEME"]{content:"bZyXrL,"}/*!sc*/
.jCgbgS{stroke:#555;background-color:#555;stroke-width:1px;}/*!sc*/
data-styled.g43[id="sc-dCFHLb"]{content:"jCgbgS,"}/*!sc*/
.iSOgZk{stroke-width:0;stroke:none;fill:#f2f3f3;}/*!sc*/
data-styled.g44[id="sc-fhzFiK"]{content:"iSOgZk,"}/*!sc*/
.grNWQL{font-size:10px;line-height:12.5;stroke:none;}/*!sc*/
data-styled.g45[id="sc-jxOSlx"]{content:"grNWQL,"}/*!sc*/
.gKcbgk{fill:var(--color-text-form-secondary-1tn2nd,#687078);}/*!sc*/
data-styled.g71[id="sc-dZoequ"]{content:"gKcbgk,"}/*!sc*/
.pFMl{font-weight:400;font-size:12px;line-height:16px;font-family:Amazon Ember,Arial,Roboto,Arial,sans-serif;text-shadow:none;fill:var(--color-text-button-primary-default-h1el7o,#16191f);}/*!sc*/
data-styled.g72[id="sc-eZkCL"]{content:"pFMl,"}/*!sc*/
.lnfDXG{fill:#fff9cc;stroke:var(--color-text-form-secondary-1tn2nd,#687078);stroke-width:0.6px;}/*!sc*/
data-styled.g73[id="sc-ggpjZQ"]{content:"lnfDXG,"}/*!sc*/
.ejsMrA{fill:#fff9cc;stroke:var(--color-text-form-secondary-1tn2nd,#687078);stroke-width:0.6px;}/*!sc*/
data-styled.g74[id="sc-cmaqmh"]{content:"ejsMrA,"}/*!sc*/
.edSmtE{stroke:var(--color-border-control-default-9i6y53,#687078);stroke-width:1px;fill:var(--color-background-container-content-ezsud2,#ffffff);opacity:0.5;}/*!sc*/
.node &gt; .new-look-state-node.has-errors &gt; .bounding-box &gt; .sc-kAkpmW{stroke:var(--color-border-status-error-16nl5k,#d13212);fill:var(--color-background-status-error-rv0ggo,#fdf3f1);}/*!sc*/
.selected &gt; .node &gt; .new-look-state-node &gt; .bounding-box &gt; .sc-kAkpmW{stroke:var(--color-border-status-info-kd0gvz,#0073bb);fill:var(--color-background-status-info-xdc3uu,#f1faff);}/*!sc*/
.selected &gt; .node &gt; .new-look-state-node.has-errors &gt; .bounding-box &gt; .sc-kAkpmW{stroke:var(--color-border-status-error-16nl5k,#d13212);fill:#fde0da;}/*!sc*/
data-styled.g75[id="sc-kAkpmW"]{content:"edSmtE,"}/*!sc*/
</style><style>
.new-look-state-node &gt; rect:first-of-type {
  stroke: #687078;
  stroke-width: 1px;
  fill: #FFFFFF;
}

.new-look-state-node .error-icon circle {
 stroke-linejoin: round;
}

.new-look-state-node .error-icon circle, .new-look-state-node .error-icon path {
 stroke: var(--color-border-status-error-16nl5k, #d13212);
 fill: none;
 stroke-width: 2px;
}

.new-look-state-node.has-errors &gt; rect:first-of-type {
 stroke: var(--color-border-status-error-16nl5k, #d13212);
 fill: var(--color-background-status-error-rv0ggo, #fdf3f1);
}

.new-look-state-node.has-errors &gt; .bounding-box &gt; .new-look-state-node-sub &gt; rect {
  stroke: var(--color-border-status-error-16nl5k, #d13212);
  fill: var(--color-background-status-error-rv0ggo, #fdf3f1);
}

.new-look-state-node .handle path {
  stroke: var(--color-border-dropdown-item-hover-k0fqkn, #879596);
  stroke-width: 1px;
  fill: none;
}

.new-look-state-node {
  font-weight: 400;
  font-family: Amazon Ember, Arial, Roboto, Arial, sans-serif;
  text-shadow: none;
}

.new-look-state-node .line1 {
  fill: #687078;
  font-size: 12px;
}

.new-look-state-node .line2 {
  fill: #16191f;
}

.selected.node &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .bounding-box &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; .bounding-box &gt; rect,
.selected.node &gt; .new-look-state-node.has-errors &gt; .new-look-state-node &gt; rect,
.selected.node &gt; .new-look-state-node &gt; .bounding-box &gt; .new-look-state-node-sub &gt; rect
 {
  stroke: var(--color-border-status-info-kd0gvz, #0073bb);
  fill: var(--color-background-status-info-xdc3uu, #f1faff);
  stroke-width: 1px;
}

.new-look-state-node-sub .item-source.not-specified {
  height: 15px;
  color: #687078;
  font-family: "Amazon Ember";
  font-size: 12px;
  letter-spacing: 0;
  line-height: 16px;
  font-weight: 400;
}
.new-look-state-node-sub .item-source .item-source_name{
  font-weight: 600;
}
.new-look-state-node-sub .item-source.not-specified .item-source_name{
  font-weight: 400;
}

.new-look-state-node-sub .item-source.not-specified {
  font-style: italic;
}

.new-look-state-node-sub &gt; rect,
.new-look-state-node &gt; .bounding-box &gt; rect {
  stroke: var(--color-border-control-default-9i6y53, #687078);
  fill: #ffffff;
}

.new-look-graph .drag-source {
  opacity: 0.2;
}

.new-look-graph .edge, .new-look-graph path.starting-connection {
  stroke-width: 1px;
  stroke: var(--color-text-form-secondary-1tn2nd, #687078);
  marker-end: url(#large-arrowhead);
}

.new-look-graph .edge-label {
  cursor: pointer;
}

.new-look-graph .edge-label rect {
  stroke-width: 1px;
  stroke: var(--color-border-control-default-9i6y53, #687078);
  fill: #fafafa;
}

.new-look-graph .edge-label.selected rect {
  stroke: var(--color-border-status-info-kd0gvz, #0073bb);
  fill: var(--color-background-status-info-xdc3uu, #f1faff);
  stroke-width: 0.6px;
}



.new-look-graph .edge-label .label {
  fill: var(--color-text-form-secondary-1tn2nd, #687078);
  font-family: Amazon Ember, Arial, Roboto, Arial, sans-serif;
}

/* centering the shape text */
@-moz-document url-prefix() {
  .new-look-graph .shape + text,
  .new-look-graph .edge-label text {
    transform: translateY(3.5px);
  }
}

.new-look-graph .edge path {
  marker-end: url(#large-arrowhead) !important;
}

.new-look-graph .edge.selected path{
  stroke: var(--color-border-status-info-kd0gvz, #0073bb);
  stroke-width: 1.1px;
}

.new-look-graph .edge.dragging-over path, .new-look-graph  g.dragging-over .starting-connection {
  stroke: #5C86FF;
  stroke-width: 2px;
}

.new-look-graph .edge.dragging-over path, .new-look-graph .dragging-over path.starting-connection {
  marker-end: url(#large-highlighted-arrowhead) !important;
}

.new-look-graph .edge.dragging-over .edge-label text {
  fill: #5C86FF;
}

#large-highlighted-arrowhead {
  fill: #5C86FF;
}

#large-highlighted-arrowhead path {
  stroke: none;
}

.new-look-graph .edge.drop-not-supported path, g.drop-not-supported .starting-connection {
  stroke: red;
}

.new-look-graph .edge.drop-not-supported .edge-label text {
  fill: red;
}

.new-look-graph .edge.drop-not-supported path {
  marker-end: url(#large-error-arrowhead) !important;
}

#large-error-arrowhead {
  fill: red;
}

.node-container * &gt; .icon  {
  &gt; rect {
    fill: #fafafa;
  }
  &gt; line {
    stroke: #d5dbdb;
  }
}


.node.Placeholder.dragging-over rect {
  stroke: var(--color-border-status-info-kd0gvz, #0073bb);
  fill: var(--color-background-status-info-xdc3uu, #f1faff);
  stroke-width: 2px;
}

.node.Placeholder.dragging-over .label {
  fill: var(--color-text-status-info-jqvvrd, #0073bb);
}

g.Placeholder rect {
  stroke-dasharray: 5 4;
  stroke: var(--color-border-dropdown-item-hover-k0fqkn, #879596);
  fill: #ffffff;
  stroke-width: 1px;
}

g.Placeholder .label {
  font-style: italic;
  fill: var(--color-text-input-placeholder-084e6q, #687078);
}

.node.Placeholder.drop-not-supported rect {
  stroke: red;
}

.node.Placeholder.drop-not-supported .label {
  fill: red;
}
</style><style>.line2 { font-size: 14px }</style></svg>